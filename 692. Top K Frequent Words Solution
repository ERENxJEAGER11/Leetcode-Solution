class comp {
  public:
  bool operator() (pair<int, string> &p1, pair<int, string> &p2) {
      if(p1.first == p2.first)
        return p1.second < p2.second;
      else
        return p1.first > p2.first;
  }
};
class Solution {
public:
    vector<string> topKFrequent(vector<string>& nums, int k) {
      unordered_map<string, int> freq;
      priority_queue<pair<int, string>,vector<pair<int, string>>,comp> pq;
      vector<string> ans;
      
      for(int i=0;i<nums.size();i++) {
        freq[nums[i]]++;
      }
      
      for(auto x : freq) {
        pq.push({x.second,x.first});
        if(pq.size() > k) {
          pq.pop();
        }
      }
      
      while(pq.size() > 0) {
        ans.push_back(pq.top().second);
        pq.pop();
      }
      
      reverse(ans.begin(), ans.end());
      
      return ans;
    }
};
