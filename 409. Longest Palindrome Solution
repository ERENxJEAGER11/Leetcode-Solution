class Solution {
public:
    int longestPalindrome(string s) {
      map<char, int> cnt_map;
      int cnt = 0;
      bool flag = false;
        for(int i=0;i<s.size();i++) {
          cnt_map[s[i]]++; // 1 1 4 2 counting the frequency 
        }
        for(int i=0;i<s.size();i++) {
          if(cnt_map[s[i]] % 2 == 0) {
            cnt += cnt_map[s[i]]; // 6 counting even freq 
            cnt_map[s[i]] = 0;
          }
          else if(cnt_map[s[i]]>2) {
            cnt += cnt_map[s[i]] - cnt_map[s[i]] % 2; // if freq is greater than 2 but odd so count should be till even only
            cnt_map[s[i]] = 1;
          }
          else {
            flag = true; // 1 only count odd one time for middle
          }
        }
      if(flag) cnt++;
      return cnt;
    }
};
